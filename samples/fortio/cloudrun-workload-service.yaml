apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: ${CLOUDRUN_SERVICE}
  labels:
    cloud.googleapis.com/location: ${REGION}
  annotations:
    run.googleapis.com/launch-stage: ALPHA
    run.googleapis.com/ingress: all
    run.googleapis.com/ingress-status: all
spec:
  template:
    metadata:
      annotations:
        run.googleapis.com/network-interfaces: '[{"network": "default", "subnetwork": "default"}]'
        # Required until a SNI-based Activator is implemented in the mesh connector (Waypoint proxy).
        autoscaling.knative.dev/minScale: '1'
        run.googleapis.com/execution-environment: gen2
        # Auto-scale based on CPU usage.
        autoscaling.knative.dev/maxScale: '10'
        # This is required - the CloudRun runtime will need to check the /metrics to get real http usage
        run.googleapis.com/cpu-throttling: 'false'
    spec:
      containerConcurrency: 10
      timeoutSeconds: 900
      # Can be customized - the sample uses a naming convention for convenience.
      # The account must be granted GKE access and RBAC permissions to act as a
      # K8S service account.
      serviceAccountName: k8s-${WORKLOAD_NAMESPACE}@${PROJECT_ID}.iam.gserviceaccount.com
      containers:
      # Current working image, temporary. Contains Istio-proxy plus a startup app (krun) to
      # prepare the environment and certificates.
      - image: gcr.io/wlhe-cr/krun:costin
        # Set for exposng the tunnel - comment out the application port
        env:
        # TRUST_DOMAIN in OSS Istio is cluster.local, in ASM is based on project ID.
        # This example is using OSS Istiod.
        - name: TRUST_DOMAIN
          value: cluster.local
        # Where to find Istiod - the K8S cluster must run Istiod and the Mesh Connector
        - name: MESH
          value: //container.googleapis.com/projects/${PROJECT_ID}/locations/${CLUSTER_LOCATION}/clusters/${CLUSTER_NAME}
        resources:
          requests:
            cpu: '0.2'
            memory: 512M
      # Application code.
      # This is a copy of fortio/fortio:latest, not a golden image.
      # It is useful for testing auto-scaling and latency.
      - image: gcr.io/wlhe-cr/fortio:latest
        args: ["server"]
        ports:
          # This is the main http port exposed by Fortio - will be made available on the
          # CloudRun URL, using IAM.
          # All the ports exposed will be available on the mesh, using mTLS and Istio policy.
          - name: http1
            containerPort: 8080
        resources:
          requests:
            cpu: '0.8'
            memory: 512M
  traffic:
  - percent: 100
    latestRevision: true
